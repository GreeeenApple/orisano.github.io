// Generated by CoffeeScript 1.3.3

$(function() {
  var aojLib, appendSolved, compareSolved, solveTemplate;
  aojLib = new AOJLib();
  solveTemplate = _.template('<td><a target="_blank" href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=<%= id %>"><%= id %></a></td>');
  appendSolved = function(list, tableName, nlspan) {
    var count, tr, x, _i, _len;
    if (nlspan == null) {
      nlspan = 10;
    }
    count = 0;
    tr = $("<tr></tr>");
    for (_i = 0, _len = list.length; _i < _len; _i++) {
      x = list[_i];
      tr.append(solveTemplate({
        id: x
      }));
      count += 1;
      if (count >= nlspan) {
        count = 0;
        $(tableName).append(tr);
        tr = $("<tr></tr>");
      }
    }
    if (count !== 0) {
      $(tableName).append(tr);
    }
    return 0;
  };
  compareSolved = function(myId, rivalId) {
    return aojLib.getSolvesList([myId, rivalId]).done(function(mySolveIds, rivalSolveIds) {
      var bothSolveIds, lowwer, myOnlySolveIds, rivalOnlySolveIds;
      lowwer = function(a, b) {
        return parseInt(a) - parseInt(b);
      };
      mySolveIds.sort(lowwer);
      rivalSolveIds.sort(lowwer);
      bothSolveIds = _.intersection(mySolveIds, rivalSolveIds);
      myOnlySolveIds = _.difference(mySolveIds, rivalSolveIds);
      rivalOnlySolveIds = _.difference(rivalSolveIds, mySolveIds);
      appendSolved(bothSolveIds, "#both-table");
      appendSolved(myOnlySolveIds, "#my-only-solve-table");
      appendSolved(rivalOnlySolveIds, "#rival-only-solve-table");
      return 0;
    });
  };
  return $("#compare-button").click(function() {
    var myId, rivalId;
    myId = $("#my-id").val();
    rivalId = $("#rival-id").val();
    return compareSolved(myId, rivalId);
  });
});
