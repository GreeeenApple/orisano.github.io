// Generated by CoffeeScript 1.3.3

$(function() {
  var API_URL, USERS, get_api, get_status, get_status_list, parse_status, parse_xml, submit_log_template;
  API_URL = "http://judge.u-aizu.ac.jp/onlinejudge/webservice/";
  USERS = ["jin_matakich", "fouga", "matetya911", "seungri", "ringoh72", "m_kyoujyu", "oken", "harekumo", "raimei10130", "kagamiz", "orisano", "li_saku", "marin72_com", "shogo1996", "Cmiz56", "defective"];
  get_api = function(req_url) {
    var dfd;
    dfd = $.Deferred();
    $.ajax({
      type: "GET",
      url: req_url,
      dataType: "xml"
    }).done(function(res) {
      return dfd.resolve(res);
    }).fail(function(res) {
      return dfd.reject(res);
    });
    return dfd.promise();
  };
  get_status = function(user) {
    var STATUS_API_URL;
    STATUS_API_URL = API_URL + "status_log?user_id=";
    return get_api(STATUS_API_URL + user);
  };
  get_status_list = function(user_list) {
    var dfds, user;
    dfds = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = user_list.length; _i < _len; _i++) {
        user = user_list[_i];
        _results.push(get_status(user));
      }
      return _results;
    })();
    return $.when.apply($, dfds);
  };
  parse_xml = function(xml, scheme) {
    var element, f, key, name, names;
    xml = $(xml);
    element = {};
    for (name in scheme) {
      f = scheme[name];
      names = name.split(">");
      key = names[names.length - 1];
      element[key] = f(xml.find(name).text());
    }
    return element;
  };
  parse_status = function(xml) {
    var status, status_list;
    status_list = $(xml).find("status_list>status");
    return (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = status_list.length; _i < _len; _i++) {
        status = status_list[_i];
        _results.push(parse_xml(status, {
          "status>run_id": String,
          "status>problem_id": String,
          "status>language": String,
          "status>cputime": parseInt,
          "status>memory": parseInt,
          "status>code_size": parseInt,
          "status>user_id": String,
          "status>status": String,
          "status>submission_date": parseInt,
          "status>submission_date_str": String
        }));
      }
      return _results;
    })();
  };
  submit_log_template = _.template('<tr class="dat" style="display: table-row; background-color: rgb(255, 255, 255);"><td class="text-left"><a href="http://judge.u-aizu.ac.jp/onlinejudge/review.jsp?rid=<%= run_id %>&tab=1"><%= run_id %></a></td><td class="text-left"><a href="http://judge.u-aizu.ac.jp/onlinejudge/user.jsp?id=<%= user_id %>#1"><%= user_id %></a></td><td class="text-left" style="line-height:12pt; padding-bottom:4px"><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=<%= problem_id %>"><%= problem_id %> </a></td><td class="detail_link" href="verdict.jsp?runID=<%= run_id %>" title="<%= run_id %>"><a><%= status %></a></td><td class="text-left"><a href="http://judge.u-aizu.ac.jp/onlinejudge/status_note.jsp?tab=2"><%= language %></a></td><td class="text-center"><%= cputime %> ms</td><td class="text-right" style="line-height:12pt; padding-bottom:4px"><%= memory %> KB</td><td class="text-right" style="line-height:12pt; padding-bottom:4px"><%= code_size %> B</td><td class="text-center" style="line-height: 12pt; padding-bottom: 4px; border-right-style: none;"><%= submission_date_str %></td>');
  return $.when(get_status_list(USERS), {}).done(function(status_list_xml) {
    var all_status, s, status, status_list, status_xml, _i, _j, _k, _len, _len1, _len2, _results;
    status_list = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = status_list_xml.length; _i < _len; _i++) {
        status_xml = status_list_xml[_i];
        _results.push(parse_status(status_xml));
      }
      return _results;
    })();
    all_status = [];
    for (_i = 0, _len = status_list.length; _i < _len; _i++) {
      status = status_list[_i];
      for (_j = 0, _len1 = status.length; _j < _len1; _j++) {
        s = status[_j];
        all_status.push(s);
      }
    }
    all_status.sort(function(a, b) {
      return b.submission_date - a.submission_date;
    });
    _results = [];
    for (_k = 0, _len2 = all_status.length; _k < _len2; _k++) {
      status = all_status[_k];
      _results.push($(".tablewrapper").append(submit_log_template(status)));
    }
    return _results;
  });
});
